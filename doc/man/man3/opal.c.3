.TH "src/opal.c" 3 "Sat Apr 3 2021" "Version v1.0" "OPaL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/opal.c
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBopal_log\fP (\fBlog_level_e\fP tag, const char *file, int line, const char *func, const char *fmt,\&.\&.\&.)"
.br
.RI "Print formatted message to log file\&. "
.ti -1c
.RI "void \fBbanner\fP (const char *msg)"
.br
.RI "Print banner with stars above and below given string in DEBUG mode\&. "
.ti -1c
.RI "short \fBopal_exit\fP (short code)"
.br
.RI "Function to close all open resources before program exit\&. "
.ti -1c
.RI "short \fBrem_comments\fP (FILE *\fBsource_fd\fP, FILE *\fBdest_fd\fP)"
.br
.RI "Read source, remove comments, write to destination\&. "
.ti -1c
.RI "short \fBproc_includes\fP (FILE *\fBsource_fd\fP, FILE *\fBdest_fd\fP)"
.br
.RI "Read source, process includes, write to destination\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "void banner (const char * msg)"

.PP
Print banner with stars above and below given string in DEBUG mode\&. Print a banner with stars above and below given string\&.
.PP
Helper function to show something prominently in the logs Eg:
.PP
[02/04/2021 20:57:58] [DEBUG] \fBbanner()\fP
.PP
[02/04/2021 20:57:58] [DEBUG] \fBbanner()\fP ***************************************************************
.PP
[02/04/2021 20:57:58] [DEBUG] \fBbanner()\fP MARC start\&.
.PP
[02/04/2021 20:57:58] [DEBUG] \fBbanner()\fP ***************************************************************
.PP
[02/04/2021 20:57:58] [DEBUG] \fBbanner()\fP
.PP
\fBParameters\fP
.RS 4
\fImsg\fP String to print
.RE
.PP
\fBReturns\fP
.RS 4
None 
.RE
.PP
Create buffer of 64 characters size and fill with 63 stars
.PP
Call logger macro to print newline, 63 stars, string, 63 stars & newline
.PP
Definition at line 105 of file opal\&.c\&.
.SS "short opal_exit (short code)"

.PP
Function to close all open resources before program exit\&. Close open files, flush buffers and exit\&.
.PP
\fBParameters\fP
.RS 4
\fIcode\fP Exit code to return
.RE
.PP
\fBReturns\fP
.RS 4
The error return code of the function\&.
.RE
.PP
\fBReturn values\fP
.RS 4
\fIcode\fP 
.br
\fIerrno\fP On system call failure 
.RE
.PP
Flush stdout
.PP
Close source file
.PP
Flush and close destination file
.PP
Flush and close log file
.PP
Definition at line 132 of file opal\&.c\&.
.SS "void opal_log (\fBlog_level_e\fP tag, const char * file, int line, const char * func, const char * fmt,  \&.\&.\&.)"

.PP
Print formatted message to log file\&. Helper function to log messages\&. Function writes to global variable log_fd\&. Usually called by a macro logger\&. Eg:
.PP
logger (ERROR, 'Cannot read file: %s', file_name);
.PP
logger (DEBUG, 'access('%s', F_OK)', source_fn););
.PP
\fBParameters\fP
.RS 4
\fItag\fP Log level of message 
.br
\fIfile\fP Source file name 
.br
\fIline\fP Source file line number 
.br
\fIline\fP Source file function 
.br
\fIfmt\fP Formatted message to log
.RE
.PP
\fBReturns\fP
.RS 4
None 
.RE
.PP

.IP "1." 4
Assert log file descriptor is not null
.IP "2." 4
Allocate buffer to hold message to log
.IP "3." 4
Read formatted user message string into the buffer
.IP "4." 4
If tag is a result of a system call and current log level is more than DEBUG, print the message and return\&.
.PP
Eg - PASS / FAIL etc
.IP "5." 4
If log message is less than current log level, print message with current date, time to log file descriptor\&. Eg\&.
.PP
[05/02/2021 20:57:58] [DEBUG] \fBmain()\fP [source_fd] access('input/hello\&.opl', R_OK) - PASS
.IP "6." 4
Flush message to log file
.PP

.PP
Definition at line 38 of file opal\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OPaL from the source code\&.
